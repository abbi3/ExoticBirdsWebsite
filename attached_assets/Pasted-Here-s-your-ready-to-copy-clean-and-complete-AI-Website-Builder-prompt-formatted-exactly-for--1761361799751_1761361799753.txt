Here’s your **ready-to-copy, clean and complete AI Website Builder prompt** — formatted exactly for direct use with your **AI web builder agent** (continuing the same site with subscription, discount, and admin features you’ve already built):

---

**PROMPT FOR AI WEBSITE BUILDER AGENT:**

I want you to **extend the existing website** (which already has subscription plans, discount coupons, and the admin dashboard) with the following new functionality:

---

### **USER ACCOUNT CREATION AND LOGIN SYSTEM (AFTER SUBSCRIPTION)**

Once a user completes a subscription, prompt the user to create an account.

**User Account Creation Flow:**

1. The **User ID** should be automatically set as the **phone number** the user entered while filling the subscription form.

   * This field should be **non-editable** and validated to ensure it matches the phone number used during subscription.
2. The user will be asked to **create a password** and **confirm password**.

   * Password requirements: Minimum 8 characters, at least one capital letter, one number, and one special character.
   * Add a “Show/Hide Password” toggle.
   * Validate both passwords match before submission.
3. Once the account is successfully created, show this message:
   ✅ “Your account has been created successfully. You can now log in using your phone number and password.”

---

### **USER LOGIN FLOW**

1. Create a **Login Page** with the following fields:

   * User ID (Phone Number)
   * Password
2. Validate credentials.

   * If incorrect, show error message: ❌ “Invalid user ID or password.”
3. On successful login, redirect the user to their **User Dashboard**.

---

### **USER DASHBOARD**

After login, show the user all their subscription details and bird-related data.

**Dashboard sections:**

#### 1. Subscription Overview

* Subscription Plan (Monthly / 6 Months / Annual)
* Subscription Start Date
* Subscription End Date
* Amount Paid (final after discount)
* Coupon Code (if used)
* Discount %
* Consultations Remaining
* Subscription Status (Active / Expired / Consultations Exhausted)

If consultations are finished (0 remaining), display a message:
⚠️ “You have used all your consultations for this plan. Please purchase a top-up plan to continue.”

---

#### 2. Bird Details Section

Allow the user to provide more information about their bird.

Fields:

* Bird Name
* Species (e.g., Macaw, Conure, Cockatoo, etc.)
* Ring ID
* Weight (in grams)
* Age (in months or years)
* Issues / Symptoms (multi-line text box)

Buttons:

* **Save Bird Details** → shows message “Your bird’s details have been saved successfully.”
* **Edit Bird Details** → allows user to update anytime.
* **Add Another Bird** → supports multiple birds if user owns more than one.

---

#### 3. Consultation Summary

* Display total consultations available vs. used vs. remaining.
* Show visual progress (e.g., progress bar or percentage).

Example:

```
Plan: 6 Months
Total Consultations: 18
Used: 3
Remaining: 15
```

---

### **ADMIN SYNCHRONIZATION**

All user details, including bird data, should automatically appear in the **Admin Dashboard** under the same user profile.

When admin opens any user’s record, they should see:

* User Name
* Mobile Number
* Subscription Plan
* Start & End Dates
* Amount Paid (Original + Final)
* Coupon Used
* Consultations Remaining
* Bird Details:

  * Bird Name
  * Species
  * Ring ID
  * Weight
  * Age
  * Symptoms / Issues

✅ Admin should be able to update or correct bird details if needed.
✅ Any admin updates should automatically reflect in the user’s dashboard.

---

### **DATABASE MODEL UPDATE**

Add user authentication and bird details to the existing subscription database.

```json
{
  "subscription_id": "string",
  "name": "string",
  "mobile": "string",
  "password_hash": "string",
  "plan": "monthly|6months|annual",
  "start_date": "ISO date",
  "end_date": "ISO date",
  "amount_paid_original": "number",
  "coupon_code": "string|null",
  "discount_percent": "number|null",
  "amount_paid_final": "number",
  "birds": [
    {
      "bird_name": "string",
      "species": "string",
      "ring_id": "string",
      "weight": "number",
      "age": "number",
      "symptoms": "string"
    }
  ],
  "consultations_remaining": "integer",
  "status": "active|expired|consultations_exhausted",
  "created_at": "ISO date",
  "updated_at": "ISO date"
}
```

---

### **API ENDPOINTS TO ADD**

* `POST /user/create` → Create new user account (validate phone and password).
* `POST /user/login` → User authentication.
* `GET /user/:phone/dashboard` → Fetch subscription + bird details.
* `PATCH /user/:phone/bird` → Add or update bird details.
* `PATCH /user/:phone/password` → Change password.
* `GET /admin/user/:phone` → Fetch full user details for admin (with bird data).

---

### **FUNCTIONAL NOTES**

* Passwords must be securely hashed, not stored in plain text.
* After successful registration, optionally auto-login the user.
* Real-time data sync between User Dashboard and Admin Panel.
* If consultations reach 0, status automatically changes to “Consultations Exhausted.”
* Admin should see this flag clearly and have the option to offer a “Top-Up Plan” (to be added later).

---

### **UX DETAILS**

✅ After subscription → Prompt “Create your account.”
✅ User creates password → success message and login enabled.
✅ User logs in → sees:

* Subscription info
* Consultations left
* Bird details section
  ✅ Admin dashboard always in sync with user updates.

---

### **SECURITY AND VALIDATION**

* Ensure phone number validation (10 digits, matches subscription).
* Require strong passwords with validation hints.
* Enforce HTTPS and encrypted communication.
* Add rate limiting on login to prevent brute-force attacks.
* Prevent unauthorized data access (user sees only their own data).

---

**End of Prompt**

---

✅ You can now copy and paste this entire text directly into your **AI Website Builder Agent** — it will generate the correct database, authentication flow, and linked dashboards for both user and admin.

Would you like me to now write the **next prompt** (for forgot-password flow via OTP or WhatsApp) so it connects naturally with this setup?
